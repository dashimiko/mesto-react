{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._headers = headers;\n    this._baseUrl = baseUrl;\n  }\n\n  getInfo() {\n    return Promise.all([this.getInitialCards(), this.getProfile()]);\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  editProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  addImage(name, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n  editAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status)).catch(console.log);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '5d808031-4cbc-4c7d-b6b0-a6ebf55d9f1f',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["/Users/daramikolajcuk/Desktop/учебное/projects/mesto-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_headers","_baseUrl","getInfo","Promise","all","getInitialCards","getProfile","fetch","then","res","ok","json","reject","status","catch","console","log","editProfile","name","about","method","body","JSON","stringify","addImage","link","deleteCard","id","deleteLike","addLike","editAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor({baseUrl,headers}) {\n    this._headers = headers;\n    this._baseUrl = baseUrl\n  }\n\n  getInfo() {\n    return Promise.all([this.getInitialCards(), this.getProfile()])\n  }\n\n  getProfile(){\n    return fetch(`${this._baseUrl}/users/me`,{\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`,{\n      headers: this._headers\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  editProfile(name,about) {\n    return fetch(`${this._baseUrl}/users/me`,{\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  addImage(name,link) {\n    return fetch(`${this._baseUrl}/cards`,{\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        link\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`,{\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  deleteLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`,{\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`,{\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n\n  editAvatar( avatar ) {\n    return fetch(`${this._baseUrl}/users/me/avatar`,{\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar,\n      })\n    }).then(res => res.ok ? res.json() : Promise.reject(res.status))\n    .catch(console.log)\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-39',\n  headers: {\n    authorization: '5d808031-4cbc-4c7d-b6b0-a6ebf55d9f1f',\n    'Content-Type': 'application/json'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}